plugins {
    // Apply the scala Plugin to add support for Scala.
    id 'scala'
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'jacoco'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use Scala 2.13 in our library project
    implementation 'org.scala-lang:scala-library:2.13.6'

    // https://mvnrepository.com/artifact/io.reactivex.rxjava3/rxjava
    implementation 'io.reactivex.rxjava3:rxjava:3.1.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'
    implementation 'org.junit.jupiter:junit-jupiter:5.7.1'

    // Use Scalatest for testing our library
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.scalatest:scalatest_2.13:3.2.9'
    testImplementation 'org.scalatestplus:junit-4-13_2.13:3.2.2.0'
    testImplementation 'io.cucumber:cucumber-junit:2.4.0'
    testImplementation 'io.cucumber:cucumber-scala_2.12:2.0.1'
    testImplementation 'org.scalacheck:scalacheck_2.12:1.14.0'
    testImplementation 'org.scalamock:scalamock-scalatest-support_2.12:3.5.0'
    testImplementation("org.seleniumhq.selenium:selenium-java:2.35.0")
    testImplementation("com.tngtech.archunit:archunit:0.18.0")

    // Need scala-xml at test runtime
    testRuntimeOnly 'org.scala-lang.modules:scala-xml_2.13:1.2.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.1'
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.7.1'
    testRuntimeOnly 'org.slf4j:slf4j-log4j12:1.7.26'
}

test {
    useJUnitPlatform{
        includeEngines("junit-jupiter", "junit-vintage")
    }
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
}

application {
    // Define the main class for the application.
    mainClass = 'it.pps.course.App'
}
